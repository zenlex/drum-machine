{"version":3,"sources":["assets/audio/SteelD_Q.wav","assets/audio/BD.wav","assets/audio/Snare.wav","assets/audio/SteelD_A.wav","assets/audio/SteelD_S.wav","assets/audio/SteelD_D.wav","assets/audio/SteelD_Z.wav","assets/audio/SteelD_X.wav","assets/audio/SteelD_C.wav","assets/audio/DS-Q-HiTom.wav","assets/audio/DS-W-MidTom.wav","assets/audio/DS-E-LowTom.wav","assets/audio/DS-A-ClosedHat.wav","assets/audio/DS-S-OpenHat.wav","assets/audio/DS-D-CymLow.wav","assets/audio/DS-Z-Kick1.wav","assets/audio/DS-X-Kick2.wav","assets/audio/DS-C-Snare.wav","assets/audio/SC-1.wav","assets/audio/SC-2.wav","assets/audio/SC-3.wav","assets/audio/SC-4.wav","assets/audio/SC-5.wav","assets/audio/SC-6.wav","assets/audio/SC-7.wav","assets/audio/SC-8.wav","assets/audio/SC-9.wav","components/drum-pad.js","components/pad-bank.js","components/display.js","drumBanks.js","components/drum-machine.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DrumPad","props","state","padStyle","playSound","bind","togglePadStyle","clickHandle","keyPressHandle","document","addEventListener","this","removeEventListener","clip","getElementById","hotkey","currentTime","playPromise","play","undefined","then","_","console","log","catch","error","updateDisplay","clipId","setTimeout","e","key","keyCode","setState","className","id","onClick","src","audioSrc","React","Component","PadBank","padBank","currPadBank","map","padObj","i","currBank","Display","SteelDrum","SteelD_Q","BD","Snare","SteelD_A","SteelD_S","SteelD_D","SteelD_Z","SteelD_X","SteelD_C","dubStep","dsQ","dsW","dsE","dsA","dsS","dsD","dsZ","dsX","dsC","swedishChef","scOne","scTwo","scThree","scFour","scFive","scSix","scSeven","scEight","scNine","drumBankIds","Object","keys","drumBanks","DrumMachine","currBankIndex","currentBank","noOfBanks","volVal","volChange","clearDisplay","bankSelect","label","display","val","target","value","Math","floor","dir","newInd","max","slice","call","getElementsByClassName","forEach","sound","volume","type","min","step","onChange","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0df4091c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SteelD_Q.93a97c9d.wav\";","module.exports = __webpack_public_path__ + \"static/media/BD.7fc21491.wav\";","module.exports = __webpack_public_path__ + \"static/media/Snare.138f1a96.wav\";","module.exports = __webpack_public_path__ + \"static/media/SteelD_A.bf9a89d6.wav\";","module.exports = __webpack_public_path__ + \"static/media/SteelD_S.a899748f.wav\";","module.exports = __webpack_public_path__ + \"static/media/SteelD_D.3bd5053d.wav\";","module.exports = __webpack_public_path__ + \"static/media/SteelD_Z.37321acf.wav\";","module.exports = __webpack_public_path__ + \"static/media/SteelD_X.38da79ca.wav\";","module.exports = __webpack_public_path__ + \"static/media/SteelD_C.3981d0b7.wav\";","module.exports = __webpack_public_path__ + \"static/media/DS-Q-HiTom.432064f0.wav\";","module.exports = __webpack_public_path__ + \"static/media/DS-W-MidTom.f1ae555f.wav\";","module.exports = __webpack_public_path__ + \"static/media/DS-E-LowTom.6abcf00b.wav\";","module.exports = __webpack_public_path__ + \"static/media/DS-A-ClosedHat.d1800db8.wav\";","module.exports = __webpack_public_path__ + \"static/media/DS-S-OpenHat.143956d1.wav\";","module.exports = __webpack_public_path__ + \"static/media/DS-D-CymLow.767d1383.wav\";","module.exports = __webpack_public_path__ + \"static/media/DS-Z-Kick1.088b280f.wav\";","module.exports = __webpack_public_path__ + \"static/media/DS-X-Kick2.f66c2653.wav\";","module.exports = __webpack_public_path__ + \"static/media/DS-C-Snare.e951d6b2.wav\";","module.exports = __webpack_public_path__ + \"static/media/SC-1.1d83ea0d.wav\";","module.exports = __webpack_public_path__ + \"static/media/SC-2.e550b689.wav\";","module.exports = __webpack_public_path__ + \"static/media/SC-3.6b62f050.wav\";","module.exports = __webpack_public_path__ + \"static/media/SC-4.f2399024.wav\";","module.exports = __webpack_public_path__ + \"static/media/SC-5.85e036e5.wav\";","module.exports = __webpack_public_path__ + \"static/media/SC-6.1dd54ba9.wav\";","module.exports = __webpack_public_path__ + \"static/media/SC-7.d508653e.wav\";","module.exports = __webpack_public_path__ + \"static/media/SC-8.0cbaeb06.wav\";","module.exports = __webpack_public_path__ + \"static/media/SC-9.b9a0144a.wav\";","//drum pad element\r\n//must be clickable and also must be assignable to a hotkey\r\n//must be able to assign audio element with id =\"{hotkey}\"\r\n\r\nimport React from 'react';\r\n\r\nclass DrumPad extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            padStyle: 'drum-pad pad-inactive'\r\n        }\r\n        this.playSound = this.playSound.bind(this);\r\n        this.togglePadStyle = this.togglePadStyle.bind(this);\r\n        this.clickHandle = this.clickHandle.bind(this);\r\n        this.keyPressHandle = this.keyPressHandle.bind(this);\r\n    }\r\n\r\ncomponentDidMount(){\r\n   //create callback to check if the key was the hotkey for the pad and trigger the audio. Should also change a state property to activate the button css animation\r\n    document.addEventListener('keydown', this.keyPressHandle);\r\n}\r\n\r\ncomponentWillUnmount(){\r\n    document.removeEventListener('keydown', this.keyPressHandle);\r\n}\r\n\r\n\r\nplaySound(){\r\n    this.togglePadStyle();\r\n    const clip = document.getElementById(this.props.hotkey);\r\n    clip.currentTime=0;\r\n    var playPromise = clip.play();\r\n\r\n      if (playPromise !== undefined) {\r\n        playPromise\r\n          .then(_ => {\r\n            // Automatic playback started!\r\n            // Show playing UI.\r\n            console.log(\"audio played auto\");\r\n          })\r\n          .catch(error => {\r\n            // Auto-play was prevented\r\n            // Show paused UI.\r\n            console.log(\"playback prevented\");\r\n          });\r\n      }\r\n    this.props.updateDisplay(this.props.clipId);\r\n    setTimeout(()=>this.togglePadStyle(), 150);\r\n}\r\n\r\nclickHandle(){\r\n    this.playSound();\r\n}\r\n\r\nkeyPressHandle(e){\r\n \r\n    if(e.key === this.props.hotkey || e.keyCode === this.props.keyCode){\r\n        this.playSound();\r\n    }\r\n   \r\n}\r\n\r\ntogglePadStyle(){\r\n    if(this.state.padStyle === 'drum-pad pad-inactive'){\r\n        this.setState({padStyle: 'drum-pad pad-active'})\r\n    } else {\r\n        this.setState({padStyle: 'drum-pad pad-inactive'})\r\n    }\r\n}\r\n\r\n    render(){\r\n        return(\r\n            <div className = {this.state.padStyle} id={this.props.clipId}\r\n                onClick = {this.clickHandle}>\r\n                <audio className = 'clip' id={this.props.hotkey} src={this.props.audioSrc}> </audio>\r\n                    {this.props.hotkey}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DrumPad;","import React from 'react'\r\nimport DrumPad from './drum-pad'\r\n\r\nclass PadBank extends React.Component{\r\n\r\n    render(){\r\n        let padBank = this.props.currPadBank.map((padObj, i, currBank) => {\r\n            return(\r\n                <DrumPad \r\n                    key = {i}\r\n                    audioSrc={currBank[i].audioSrc}\r\n                    clipId={currBank[i].id}\r\n                    hotkey={currBank[i].hotkey}\r\n                    keyCode={currBank[i].keyCode}\r\n                    updateDisplay={this.props.updateDisplay}\r\n                />\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div id = 'padgrid'>\r\n                {padBank}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PadBank;","\r\n//simple display element that renders the name of the audio sample when clicked\r\nimport React from 'react';\r\n\r\nfunction Display(props){\r\n    return(\r\n        <p>{props.clipId}</p>\r\n    )\r\n}\r\n\r\nexport default Display;","//drum bank audio imports and pad properties\r\n/*********************************\r\n * SteelDrum Sounds\r\n ********************************/\r\nimport SteelD_Q from './assets/audio/SteelD_Q.wav'\r\nimport BD from './assets/audio/BD.wav'\r\nimport Snare from './assets/audio/Snare.wav'\r\nimport SteelD_A from './assets/audio/SteelD_A.wav'\r\nimport SteelD_S from './assets/audio/SteelD_S.wav'\r\nimport SteelD_D from './assets/audio/SteelD_D.wav'\r\nimport SteelD_Z from './assets/audio/SteelD_Z.wav'\r\nimport SteelD_X from './assets/audio/SteelD_X.wav'\r\nimport SteelD_C from './assets/audio/SteelD_C.wav'\r\n/*********************************\r\n * DubStep Kit Sounds\r\n ********************************/\r\nimport dsQ from './assets/audio/DS-Q-HiTom.wav'\r\nimport dsW from './assets/audio/DS-W-MidTom.wav'\r\nimport dsE from './assets/audio/DS-E-LowTom.wav'\r\nimport dsA from './assets/audio/DS-A-ClosedHat.wav'\r\nimport dsS from './assets/audio/DS-S-OpenHat.wav'\r\nimport dsD from './assets/audio/DS-D-CymLow.wav'\r\nimport dsZ from './assets/audio/DS-Z-Kick1.wav'\r\nimport dsX from './assets/audio/DS-X-Kick2.wav'\r\nimport dsC from './assets/audio/DS-C-Snare.wav'\r\n/*********************************\r\n * Swedish Chef Sounds\r\n ********************************/\r\nimport scOne from './assets/audio/SC-1.wav'\r\nimport scTwo from './assets/audio/SC-2.wav'\r\nimport scThree from './assets/audio/SC-3.wav'\r\nimport scFour from './assets/audio/SC-4.wav'\r\nimport scFive from './assets/audio/SC-5.wav'\r\nimport scSix from './assets/audio/SC-6.wav'\r\nimport scSeven from './assets/audio/SC-7.wav'\r\nimport scEight from './assets/audio/SC-8.wav'\r\nimport scNine from './assets/audio/SC-9.wav'\r\n\r\n\r\nexport const SteelDrum=[\r\n    {\r\n        hotkey: 'Q',\r\n        keyCode: 81,\r\n        audioSrc: SteelD_Q,\r\n        id:'Steel Drum D5'\r\n    },\r\n    {\r\n        hotkey: 'W',\r\n        keyCode: 87,\r\n        audioSrc: BD,\r\n        id:'Kick'\r\n    },\r\n    {\r\n        hotkey: 'E',\r\n        keyCode: 69,\r\n        audioSrc: Snare,\r\n        id:'Snare'\r\n    },\r\n    {\r\n        hotkey: 'A',\r\n        keyCode: 65,\r\n        audioSrc: SteelD_A,\r\n        id:'Steel Drum D4'\r\n    },\r\n    {\r\n        hotkey: 'S',\r\n        keyCode: 83,\r\n        audioSrc: SteelD_S,\r\n        id:'Steel Drum F#4'\r\n    },\r\n    {\r\n        hotkey: 'D',\r\n        keyCode: 68,\r\n        audioSrc: SteelD_D,\r\n        id:'Steel Drum A4'\r\n    },\r\n    {\r\n        hotkey: 'Z',\r\n        keyCode: 90,\r\n        audioSrc: SteelD_Z,\r\n        id:'Steel Drum D3'\r\n    },\r\n    {\r\n        hotkey: 'X',\r\n        keyCode: 88,\r\n        audioSrc: SteelD_X,\r\n        id:'Steel Drum F#3'\r\n    },\r\n    {\r\n        hotkey: 'C',\r\n        keyCode: 67,\r\n        audioSrc: SteelD_C,\r\n        id:'Steel Drum A3'\r\n    },\r\n]\r\n\r\nexport const dubStep=[\r\n    {\r\n        hotkey: 'Q',\r\n        keyCode: 81,\r\n        audioSrc: dsQ,\r\n        id:'Hi Tom'\r\n    },\r\n    {\r\n        hotkey: 'W',\r\n        keyCode: 87,\r\n        audioSrc: dsW,\r\n        id:'Mid Tom'\r\n    },\r\n    {\r\n        hotkey: 'E',\r\n        keyCode: 69,\r\n        audioSrc: dsE,\r\n        id:'Low Tom'\r\n    },\r\n    {\r\n        hotkey: 'A',\r\n        keyCode: 65,\r\n        audioSrc: dsA,\r\n        id:'Closed Hat'\r\n    },\r\n    {\r\n        hotkey: 'S',\r\n        keyCode: 83,\r\n        audioSrc: dsS,\r\n        id:'Open Hat'\r\n    },\r\n    {\r\n        hotkey: 'D',\r\n        keyCode: 68,\r\n        audioSrc: dsD,\r\n        id:'Crash'\r\n    },\r\n    {\r\n        hotkey: 'Z',\r\n        keyCode: 90,\r\n        audioSrc: dsZ,\r\n        id:'Kick 1'\r\n    },\r\n    {\r\n        hotkey: 'X',\r\n        keyCode: 88,\r\n        audioSrc: dsX,\r\n        id:'Kick 2'\r\n    },\r\n    {\r\n        hotkey: 'C',\r\n        keyCode: 67,\r\n        audioSrc: dsC,\r\n        id:'Snare'\r\n    },\r\n]\r\n\r\nexport const swedishChef=[\r\n    {\r\n        hotkey: 'Q',\r\n        keyCode: 81,\r\n        audioSrc: scOne,\r\n        id:'Shrimpees'\r\n    },\r\n    {\r\n        hotkey: 'W',\r\n        keyCode: 87,\r\n        audioSrc: scTwo,\r\n        id:'Bursh'\r\n    },\r\n    {\r\n        hotkey: 'E',\r\n        keyCode: 69,\r\n        audioSrc: scThree,\r\n        id:'Geif'\r\n    },\r\n    {\r\n        hotkey: 'A',\r\n        keyCode: 65,\r\n        audioSrc: scFour,\r\n        id:'Gurndib'\r\n    },\r\n    {\r\n        hotkey: 'S',\r\n        keyCode: 83,\r\n        audioSrc: scFive,\r\n        id:'Sigiv'\r\n    },\r\n    {\r\n        hotkey: 'D',\r\n        keyCode: 68,\r\n        audioSrc: scSix,\r\n        id:'Versht'\r\n    },\r\n    {\r\n        hotkey: 'Z',\r\n        keyCode: 90,\r\n        audioSrc: scSeven,\r\n        id:'Duurrndiv'\r\n    },\r\n    {\r\n        hotkey: 'X',\r\n        keyCode: 88,\r\n        audioSrc: scEight,\r\n        id:'B\\u00D8rdig'\r\n    },\r\n    {\r\n        hotkey: 'C',\r\n        keyCode: 67,\r\n        audioSrc: scNine,\r\n        id:'G\\u00D8\\u00D8rt'\r\n    },\r\n]","//container for all other elements\r\n//must have id #drum machine\r\n//must contain display element with id=\"display\" (make a div with id display and put display react component inside)\r\n//9 drum pads in q,w,e,a,s,d,z,x,c order\r\nimport React from 'react'\r\nimport PadBank from './pad-bank'\r\nimport Display from './display'\r\nimport * as drumBanks from '../drumBanks.js'\r\nconst drumBankIds = Object.keys(drumBanks);\r\nconsole.log(\"drumBankIds = \", drumBankIds);\r\nclass DrumMachine extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currBankIndex:0,\r\n            currentBank:drumBanks[drumBankIds[0]],\r\n            noOfBanks: 3,\r\n            volVal : 0.5\r\n        }\r\n        this.updateDisplay = this.updateDisplay.bind(this);\r\n        this.volChange = this.volChange.bind(this);\r\n        this.clearDisplay = this.clearDisplay.bind(this);\r\n        this.bankSelect = this.bankSelect.bind(this);\r\n    }\r\n\r\n    updateDisplay(label){\r\n        this.setState({display:label});\r\n        setTimeout(() => this.clearDisplay(), 1500);\r\n    }\r\n\r\n    volChange(e){\r\n        let val = e.target.value\r\n        this.setState({\r\n            volVal: val,\r\n            display: \"Volume: \" + (Math.floor(val *100))\r\n        });\r\n        setTimeout(() => this.clearDisplay() , 800);\r\n    }\r\n\r\n    clearDisplay(){\r\n        this.setState({display: ''})\r\n    }\r\n\r\n    bankSelect(dir){\r\n        let newInd = this.state.currBankIndex;\r\n        let max = this.state.noOfBanks - 1;\r\n\r\n        if(dir === 'next'){\r\n            newInd = newInd < max ? newInd += 1 : 0;\r\n        }\r\n        if(dir === 'prev'){\r\n            newInd = newInd > 0 ? newInd -= 1 : max;\r\n        }\r\n\r\n        this.setState(\r\n            {\r\n                currBankIndex: newInd,\r\n                currentBank: drumBanks[drumBankIds[newInd]]\r\n            });\r\n        this.updateDisplay(drumBankIds[newInd])\r\n    }\r\n\r\n    render(){\r\n        const clips = [].slice.call(document.getElementsByClassName('clip'));\r\n        clips.forEach(sound => {\r\n        sound.volume = this.state.volVal\r\n        });\r\n\r\n        return(\r\n            <div id = 'drum-machine'>\r\n                <header>BAMF Drum Machine</header>\r\n                <PadBank currPadBank={this.state.currentBank} updateDisplay={this.updateDisplay}/>\r\n                <div id='controlsbox'>\r\n                    <div id='display'>\r\n                        <Display clipId={this.state.display}/>\r\n                    </div>    \r\n                    <div id='controls'>\r\n                        <div id='bank-select'>\r\n                            <h2>Select Bank:</h2>\r\n                            <div id='bank-prev' onClick={() => this.bankSelect('prev')} />\r\n                            <div id='bank-next' onClick={() => this.bankSelect('next')} />\r\n                        </div>\r\n                        <div id='volume-contianer'>\r\n                        <h2>Volume:</h2>\r\n                        <input type='range' id='volume' min = '0' max = '1' step = '.01' value = {this.state.volVal} onChange={this.volChange}/>\r\n                        </div>\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DrumMachine","import React from 'react';\r\nimport './App.css';\r\nimport DrumMachine from './components/drum-machine'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <DrumMachine />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}